name: BuildAndAnalyze

run-name: ${{github.actor}} - static analysis

on: [push]

jobs:
  build-analyze:
    runs-on: ${{matrix.config.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        config:
          - {
              name: "Windows",
              os: "windows-latest",
              pvs_analyzer: "C:/Program Files (x86)/PVS-Studio/PVS-Studio_Cmd.exe",
              pvs_converter: "C:/Program Files (x86)/PVS-Studio/HtmlGenerator.exe",
              blame_notifier: "C:/Program Files (x86)/PVS-Studio/BlameNotifier.exe",
              sln_file: "Catch2.sln",
              pvs_log: "PVS-Studio_Log.json",
              pvs_sarif: "PVS-Studio_Log.sarif"
            }

          #- {
          #  name: "Linux",
          #  os: "ubuntu-latest",
          #  pvs_analyzer: "pvs-studio-analyzer",
          #  pvs_converter: "plog-converter",
          #  blame_notifier: "blame-notofier",
          #  sln_file: "compile_commands.json",
          #  pvs_log: "PVS-Studio.log",
          #  pvs_sarif: "PVS-Studio.sarif"
          # }
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Choco install tools
        if: runner.os == 'Windows'
        uses: crazy-max/ghaction-chocolatey@v3
        with: 
          args: install pvs-studio

      - name: Activate PVS-Studio
        env:
          USER_NAME: ${{ secrets.PVS_USER_NAME }}
          LIC_KEY: ${{ secrets.PVS_LIC_KEY }}
        #run:  Start-Process -FilePath "${{ matrix.config.pvs_analyzer }}" -NoNewWindow -Wait -ArgumentList "credentials", "-u", "${{ env.USER_NAME }}", "-l", "${{env.LIC_KEY}}"
        shell: bash
        run: "\"${{matrix.config.pvs_analyzer}}\" credentials -u \"${{env.USER_NAME}}\" -l \"${{env.LIC_KEY}}\""

      - name: Configure
        run:  cmake -G "Visual Studio 17 2022" -S "${{ github.workspace }}" -B "${{github.workspace}}/build"

      - name: Build 
        run:  cmake --build "${{github.workspace}}/build"

      - name: Analyzer with PVS-Studio
        shell: pwsh
        run: #|
          Start-Process -FilePath "${{ matrix.config.pvs_analyzer }}" -NoNewWindow -Wait -ArgumentList "-t", "Catch2.sln", "-r", "-o", "${{matrix.config.pvs_log}}"
         # Start-Process -FilePath "${{ matrix.config.pvs_converter }}" -NoNewWindow -Wait -ArgumentList "-t", "sarif", "-a", "all", "-o", "${{ matrix.config.pvs_sarif}}", "${{ matrix.config.pvs_log }}"
        working-directory: ${{github.workspace}}/build
      
      - name: Convert Result
        shell: bash
        run: "\"${{matrix.config.pvs_converter}}\" -t \"sarif\" -a all -o \"${{matrix.config.pvs_sarif}}\" \"${{matrix.config.pvs_log}}\""
        working-directory: ${{github.workspace}}/build

      - name: Publich static analysis report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{github.workspace}}/build/${{matrix.config.pvs_sarif}}
          category: PVS-Studio  
