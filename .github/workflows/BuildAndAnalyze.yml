name: BuildAndAnalyze

run-name: ${{github.actor}} - static analysis

on: [push]

jobs:
  BuildAndAnalyze:
    runs-on: ${{matrix.config.os}}
    name: "Build and analyze on ${{matrix.config.os}}"
    timeout-minutes: 30
    strategy:
      matrix:
        config:
          - {
              name: "Windows",
              os: "windows-latest",
              pvs_analyzer: "C:/Program Files (x86)/PVS-Studio/CompilerCommandsAnalyzer.exe",
              pvs_converter: "C:/Program Files (x86)/PVS-Studio/HtmlGenerator.exe",
              pvs_log: "PVS-Studio.log",
              pvs_sarif: "PVS-Studio.sarif",
              pvs_suppression: "catch2.suppress.json"
            }

          - {
              name: "Linux",
              os: "ubuntu-latest",
              pvs_analyzer: "pvs-studio-analyzer",
              pvs_converter: "plog-converter",
              sln_file: "compile_commands.json",
              pvs_log: "PVS-Studio.log",
              pvs_sarif: "PVS-Studio.sarif",
              pvs_suppression: "catch2.suppress.json"
           }

          - {
              name: "macOS",
              os: "macOS-latest",
              pvs_analyzer: "pvs-studio-analyzer",
              pvs_converter: "plog-converter",
              sln_file: "compile_commands.json",
              pvs_log: "PVS-Studio.log",
              pvs_sarif: "PVS-Studio.sarif",
              pvs_suppression: "catch2.suppress.json"
          }
    steps:
      - name: Check out
        uses: actions/checkout@v4

#For Windows       
      - name: Choco install tools
        if: runner.os == 'Windows'
        uses: crazy-max/ghaction-chocolatey@v3
        with: 
          args: install pvs-studio ninja
 
      - name: Initialize MSVC development environment
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
          
#For Linux
      - name: Install PVS-Studio
        if: runner.os != 'Windows'
        run: |
              if [ "$RUNNER_OS" == "Linux" ]; then
                wget -qO- https://cdn.pvs-studio.com/etc/pubkey.txt | \
                sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/viva64.gpg
                sudo wget -O /etc/apt/sources.list.d/viva64.list \
                https://cdn.pvs-studio.com/etc/viva64.list
                sudo apt-get update
                sudo apt-get install pvs-studio ninja-build
              elif [ "$RUNNER_OS" == 'macOS' ]; then
                brew install viva64/pvs-studio/pvs-studio ninja
              else
                echo "The $RUNNER_OS is not supported."
                exit 1
              fi

      
      - name: Activate PVS-Studio
        env:
          USER_NAME: ${{ secrets.PVS_USER_NAME }}
          LIC_KEY: ${{ secrets.PVS_LIC_KEY }}
        shell: bash
        run: "\"${{matrix.config.pvs_analyzer}}\" credentials \"${{env.USER_NAME}}\" \"${{env.LIC_KEY}}\""

      - name: Configure
        run:  cmake -G "Ninja" -DCMAKE_EXPORT_COMPILE_COMMANDS=On -S "${{ github.workspace }}" -B "${{github.workspace}}/build"

      - name: Build 
        run:  cmake --build "${{github.workspace}}/build"

      - name: Analyzer with PVS-Studio
        shell: bash
        env:
          SUPPRESS_FILE: "${{github.workspace}}/src/catch2.suppress.json"
        run: "\"${{matrix.config.pvs_analyzer}}\" analyze -f \"${{github.workspace}}/build/compile_commands.json\" -o \"${{matrix.config.pvs_log}}\" -s \"${{env.SUPPRESS_FILE}}\" -j" 
        working-directory: ${{github.workspace}}/build
      
      - name: Convert analysis result
        shell: bash
        run: "\"${{matrix.config.pvs_converter}}\" -t \"sarif\" -a \"all\" -o \"${{matrix.config.pvs_sarif}}\" \"${{matrix.config.pvs_log}}\""
        working-directory: ${{github.workspace}}/build

      - name: Save analysis result
        uses: actions/upload-artifact@v4
        with:
          name: StaticAnalisis-${{matrix.config.os}}
          path: ${{github.workspace}}/build/PVS-Studio*
          retention-days: 7
          if-no-files-found: ignore
        
      - name: Publish static analysis report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "${{github.workspace}}/build/${{matrix.config.pvs_sarif}}"
          category: "PVS-Studio - ${{matrix.config.os}}"